AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  SubnetID:
    Type: String
    Default: subnet-02d40af82aca74332 # Replace with a real subnet ID
  InstanceType:
    Type: String
    Default: t3.micro
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: fastapi-keypair  # Replace with an existing EC2 key pair

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: fastapi-cluster

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: fastapi-log-group

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: fastapi-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: fastapi-instance-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerServiceforEC2Role

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH access
      VpcId: vpc-0346f086f281aabe7 # Replace with your actual VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  ECSAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: fastapi-launch-template
      LaunchTemplateData:
        ImageId: !Ref ECSAMI
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref SecurityGroup
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo ECS_CLUSTER=fastapi-cluster >> /etc/ecs/ecs.config

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      VPCZoneIdentifier:
        - !Ref SubnetID
      LaunchTemplate:
        LaunchTemplateSpecification:
          LaunchTemplateName: !Ref LaunchTemplate
          Version: "1"
      Tags:
        - Key: Name
          Value: fastapi-instance
          PropagateAtLaunch: true

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: fastapi-task
      Cpu: 256
      Memory: 512
      NetworkMode: bridge
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: fastapi-container
          Image: 200799931813.dkr.ecr.us-west-2.amazonaws.com/fastapi
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: fastapi-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: EC2
